// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PRUEBA.Data;

#nullable disable

namespace PRUEBA.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250701092449_InitialCreationFull")]
    partial class InitialCreationFull
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PRUEBA.Models.DataSet", b =>
                {
                    b.Property<int>("DataSetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DataSetID"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DataSetName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("FieldId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProcedureID")
                        .HasColumnType("int");

                    b.HasKey("DataSetID");

                    b.HasIndex("FieldId");

                    b.HasIndex("ProcedureID");

                    b.ToTable("DataSets");

                    b.HasData(
                        new
                        {
                            DataSetID = 1,
                            CreatedDate = new DateTime(2023, 1, 10, 8, 15, 0, 0, DateTimeKind.Utc),
                            DataSetName = "Sales Data 2023",
                            Description = "Annual sales records.",
                            FieldId = 1,
                            LastModifiedDate = new DateTime(2023, 1, 10, 8, 15, 0, 0, DateTimeKind.Utc),
                            ProcedureID = 1
                        },
                        new
                        {
                            DataSetID = 2,
                            CreatedDate = new DateTime(2023, 2, 15, 9, 45, 0, 0, DateTimeKind.Utc),
                            DataSetName = "Customer Feedback",
                            Description = "Survey responses from Q1.",
                            FieldId = 2,
                            LastModifiedDate = new DateTime(2023, 2, 15, 9, 45, 0, 0, DateTimeKind.Utc),
                            ProcedureID = 2
                        },
                        new
                        {
                            DataSetID = 3,
                            CreatedDate = new DateTime(2023, 1, 20, 10, 0, 0, 0, DateTimeKind.Utc),
                            DataSetName = "Product Inventory",
                            Description = "Current stock levels.",
                            FieldId = 1,
                            LastModifiedDate = new DateTime(2023, 1, 20, 10, 0, 0, 0, DateTimeKind.Utc),
                            ProcedureID = 1
                        },
                        new
                        {
                            DataSetID = 4,
                            CreatedDate = new DateTime(2023, 3, 25, 10, 30, 0, 0, DateTimeKind.Utc),
                            DataSetName = "Website Traffic",
                            Description = "Visitor data for Q2.",
                            FieldId = 2,
                            LastModifiedDate = new DateTime(2023, 3, 25, 10, 30, 0, 0, DateTimeKind.Utc),
                            ProcedureID = 3
                        },
                        new
                        {
                            DataSetID = 5,
                            CreatedDate = new DateTime(2023, 2, 20, 11, 0, 0, 0, DateTimeKind.Utc),
                            DataSetName = "Employee Performance",
                            Description = "Quarterly performance reviews.",
                            FieldId = 1,
                            LastModifiedDate = new DateTime(2023, 2, 20, 11, 0, 0, 0, DateTimeKind.Utc),
                            ProcedureID = 2
                        },
                        new
                        {
                            DataSetID = 6,
                            CreatedDate = new DateTime(2023, 5, 5, 14, 0, 0, 0, DateTimeKind.Utc),
                            DataSetName = "Financial Records",
                            Description = "Annual financial statements.",
                            FieldId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 5, 14, 0, 0, 0, DateTimeKind.Utc),
                            ProcedureID = 5
                        },
                        new
                        {
                            DataSetID = 7,
                            CreatedDate = new DateTime(2023, 3, 30, 9, 0, 0, 0, DateTimeKind.Utc),
                            DataSetName = "Customer Demographics",
                            Description = "Demographic data of customer base.",
                            FieldId = 2,
                            LastModifiedDate = new DateTime(2023, 3, 30, 9, 0, 0, 0, DateTimeKind.Utc),
                            ProcedureID = 3
                        },
                        new
                        {
                            DataSetID = 8,
                            CreatedDate = new DateTime(2023, 4, 30, 12, 0, 0, 0, DateTimeKind.Utc),
                            DataSetName = "Server Logs",
                            Description = "Server activity and error logs.",
                            FieldId = 1,
                            LastModifiedDate = new DateTime(2023, 4, 30, 12, 0, 0, 0, DateTimeKind.Utc),
                            ProcedureID = 4
                        },
                        new
                        {
                            DataSetID = 9,
                            CreatedDate = new DateTime(2023, 5, 10, 10, 0, 0, 0, DateTimeKind.Utc),
                            DataSetName = "HR Data",
                            Description = "Human Resources employee data.",
                            FieldId = 2,
                            LastModifiedDate = new DateTime(2023, 5, 10, 10, 0, 0, 0, DateTimeKind.Utc),
                            ProcedureID = 5
                        },
                        new
                        {
                            DataSetID = 10,
                            CreatedDate = new DateTime(2023, 4, 5, 15, 0, 0, 0, DateTimeKind.Utc),
                            DataSetName = "Marketing Campaign Data",
                            Description = "Performance data for recent campaigns.",
                            FieldId = 1,
                            LastModifiedDate = new DateTime(2023, 4, 5, 15, 0, 0, 0, DateTimeKind.Utc),
                            ProcedureID = 3
                        },
                        new
                        {
                            DataSetID = 11,
                            CreatedDate = new DateTime(2023, 2, 1, 9, 0, 0, 0, DateTimeKind.Utc),
                            DataSetName = "Supply Chain Data",
                            Description = "Logistics and inventory flow.",
                            FieldId = 2,
                            LastModifiedDate = new DateTime(2023, 2, 1, 9, 0, 0, 0, DateTimeKind.Utc),
                            ProcedureID = 1
                        },
                        new
                        {
                            DataSetID = 12,
                            CreatedDate = new DateTime(2023, 5, 15, 16, 0, 0, 0, DateTimeKind.Utc),
                            DataSetName = "IoT Sensor Readings",
                            Description = "Data from various IoT devices.",
                            FieldId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 15, 16, 0, 0, 0, DateTimeKind.Utc),
                            ProcedureID = 4
                        },
                        new
                        {
                            DataSetID = 13,
                            CreatedDate = new DateTime(2023, 3, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            DataSetName = "Customer Support Tickets",
                            Description = "Records of customer support interactions.",
                            FieldId = 2,
                            LastModifiedDate = new DateTime(2023, 3, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            ProcedureID = 2
                        },
                        new
                        {
                            DataSetID = 14,
                            CreatedDate = new DateTime(2023, 5, 20, 11, 0, 0, 0, DateTimeKind.Utc),
                            DataSetName = "Research Study Results",
                            Description = "Data from scientific research.",
                            FieldId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 20, 11, 0, 0, 0, DateTimeKind.Utc),
                            ProcedureID = 5
                        },
                        new
                        {
                            DataSetID = 15,
                            CreatedDate = new DateTime(2023, 4, 10, 13, 0, 0, 0, DateTimeKind.Utc),
                            DataSetName = "Social Media Engagement",
                            Description = "Metrics from social media platforms.",
                            FieldId = 2,
                            LastModifiedDate = new DateTime(2023, 4, 10, 13, 0, 0, 0, DateTimeKind.Utc),
                            ProcedureID = 3
                        });
                });

            modelBuilder.Entity("PRUEBA.Models.Field", b =>
                {
                    b.Property<int>("FieldID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FieldID"));

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("FieldID");

                    b.ToTable("Fields");

                    b.HasData(
                        new
                        {
                            FieldID = 1,
                            DataType = "String",
                            FieldName = "SampleField1"
                        },
                        new
                        {
                            FieldID = 2,
                            DataType = "Number",
                            FieldName = "SampleField2"
                        });
                });

            modelBuilder.Entity("PRUEBA.Models.Procedure", b =>
                {
                    b.Property<int>("ProcedureID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProcedureID"));

                    b.Property<int>("CreatedByUserID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LastModifiedUserID")
                        .HasColumnType("int");

                    b.Property<string>("ProcedureName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ProcedureID");

                    b.HasIndex("CreatedByUserID");

                    b.HasIndex("LastModifiedUserID");

                    b.ToTable("Procedures");

                    b.HasData(
                        new
                        {
                            ProcedureID = 1,
                            CreatedByUserID = 1,
                            CreatedDate = new DateTime(2023, 1, 10, 8, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Process for cleaning raw data.",
                            LastModifiedDate = new DateTime(2023, 1, 10, 8, 0, 0, 0, DateTimeKind.Utc),
                            LastModifiedUserID = 1,
                            ProcedureName = "Data Cleaning"
                        },
                        new
                        {
                            ProcedureID = 2,
                            CreatedByUserID = 1,
                            CreatedDate = new DateTime(2023, 2, 15, 9, 30, 0, 0, DateTimeKind.Utc),
                            Description = "Performing statistical tests on data.",
                            LastModifiedDate = new DateTime(2023, 2, 15, 9, 30, 0, 0, DateTimeKind.Utc),
                            LastModifiedUserID = 1,
                            ProcedureName = "Statistical Analysis"
                        },
                        new
                        {
                            ProcedureID = 3,
                            CreatedByUserID = 2,
                            CreatedDate = new DateTime(2023, 3, 20, 10, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Creating charts and dashboards.",
                            LastModifiedDate = new DateTime(2023, 3, 20, 10, 0, 0, 0, DateTimeKind.Utc),
                            LastModifiedUserID = 2,
                            ProcedureName = "Data Visualization"
                        },
                        new
                        {
                            ProcedureID = 4,
                            CreatedByUserID = 1,
                            CreatedDate = new DateTime(2023, 4, 25, 11, 45, 0, 0, DateTimeKind.Utc),
                            Description = "Developing and training ML models.",
                            LastModifiedDate = new DateTime(2023, 4, 25, 11, 45, 0, 0, DateTimeKind.Utc),
                            LastModifiedUserID = 1,
                            ProcedureName = "Machine Learning Model"
                        },
                        new
                        {
                            ProcedureID = 5,
                            CreatedByUserID = 2,
                            CreatedDate = new DateTime(2023, 5, 1, 13, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Combining data from various sources.",
                            LastModifiedDate = new DateTime(2023, 5, 1, 13, 0, 0, 0, DateTimeKind.Utc),
                            LastModifiedUserID = 2,
                            ProcedureName = "Data Integration"
                        });
                });

            modelBuilder.Entity("PRUEBA.Models.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleID = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleID = 2,
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("PRUEBA.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            Email = "admin@example.com",
                            Password = "PEGA_AQUÍ_EL_HASH_DE_ADMIN",
                            Username = "admin"
                        },
                        new
                        {
                            UserID = 2,
                            Email = "user1@example.com",
                            Password = "PEGA_AQUÍ_EL_HASH_DE_USER1",
                            Username = "user1"
                        });
                });

            modelBuilder.Entity("PRUEBA.Models.UserRole", b =>
                {
                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.HasKey("UserID", "RoleID");

                    b.HasIndex("RoleID");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            RoleID = 1,
                            ID = 0
                        },
                        new
                        {
                            UserID = 2,
                            RoleID = 2,
                            ID = 0
                        });
                });

            modelBuilder.Entity("PRUEBA.Models.DataSet", b =>
                {
                    b.HasOne("PRUEBA.Models.Field", "Field")
                        .WithMany("DataSets")
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRUEBA.Models.Procedure", "Procedure")
                        .WithMany("DataSets")
                        .HasForeignKey("ProcedureID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Field");

                    b.Navigation("Procedure");
                });

            modelBuilder.Entity("PRUEBA.Models.Procedure", b =>
                {
                    b.HasOne("PRUEBA.Models.User", "CreatedByUser")
                        .WithMany("CreatedProcedures")
                        .HasForeignKey("CreatedByUserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PRUEBA.Models.User", "LastModifiedByUser")
                        .WithMany("ModifiedProcedures")
                        .HasForeignKey("LastModifiedUserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("LastModifiedByUser");
                });

            modelBuilder.Entity("PRUEBA.Models.UserRole", b =>
                {
                    b.HasOne("PRUEBA.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRUEBA.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRUEBA.Models.Field", b =>
                {
                    b.Navigation("DataSets");
                });

            modelBuilder.Entity("PRUEBA.Models.Procedure", b =>
                {
                    b.Navigation("DataSets");
                });

            modelBuilder.Entity("PRUEBA.Models.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("PRUEBA.Models.User", b =>
                {
                    b.Navigation("CreatedProcedures");

                    b.Navigation("ModifiedProcedures");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
